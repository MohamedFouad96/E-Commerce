package sa.edu.twuaiq.e_commerce.view

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import androidx.constraintlayout.motion.widget.MotionLayout
import sa.edu.twuaiq.e_commerce.R
import sa.edu.twuaiq.e_commerce.databinding.ActivitySplashBinding
import sa.edu.twuaiq.e_commerce.repositories.ApiServiceRepository
import sa.edu.twuaiq.e_commerce.repositories.RoomServiceRepository

class Splash : AppCompatActivity() {

    /**
     * View binding is a feature that allows you to more easily write code that interacts with views.
     * Once view binding is enabled in a module,
     * it generates a binding class for each XML layout file present in that module.
     * An instance of a binding class contains direct references to all views that have an ID in the corresponding layout.
     * */

    /**
     * If view binding is enabled for a module,
     * a binding class is generated for each XML layout file that the module contains.
     * Each binding class contains references to the root view and all views that have an ID.
     * The name of the binding class is generated by converting the name of the XML file to Pascal case and adding the word "Binding" to the end.
     * */
    private lateinit var binding: ActivitySplashBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Initialize Api Service Repository only for one time with companion object function in ApiServiceRepository class
        ApiServiceRepository.init(this)

        // Initialize Room Service Repository only for one time with companion object function in RoomServiceRepository class
        RoomServiceRepository.init(this)


        /**
         * To set up an instance of the binding class for use with an activity, perform the following steps in the activity's onCreate() method:

        Call the static inflate() method included in the generated binding class. This creates an instance of the binding class for the activity to use.
        Get a reference to the root view by either calling the getRoot() method or using Kotlin property syntax.
        Pass the root view to setContentView() to make it the active view on the screen.
         * */
        binding = ActivitySplashBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.motionLayout.setTransitionListener(object : MotionLayout.TransitionListener {
            override fun onTransitionStarted(
                motionLayout: MotionLayout?,
                startId: Int,
                endId: Int
            ) {

            }

            override fun onTransitionChange(
                motionLayout: MotionLayout?,
                startId: Int,
                endId: Int,
                progress: Float
            ) {

            }

            override fun onTransitionCompleted(motionLayout: MotionLayout?, currentId: Int) {
                val intent = Intent(this@Splash, MainActivity::class.java)
                startActivity(intent)
                finish()
            }

            override fun onTransitionTrigger(
                motionLayout: MotionLayout?,
                triggerId: Int,
                positive: Boolean,
                progress: Float
            ) {

            }

        })
    }
}